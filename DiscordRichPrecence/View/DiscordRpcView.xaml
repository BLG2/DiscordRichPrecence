<Window x:Class="DiscordRichPrecence.View.DiscordRpcView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DiscordRichPrecence.Services"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
        xmlns:models="clr-namespace:DiscordRichPrecence.Services" 
        mc:Ignorable="d"
        ResizeMode="NoResize"
        WindowStyle="None"
        Background="Transparent" 
        AllowsTransparency="True"
        WindowStartupLocation="CenterScreen"
        Icon="/Images/logo.ico"
        x:Name="RPCWindow"
        Title="DiscordRpcWindow" Height="{Binding mainWindowHeight, Mode=TwoWay}" MinHeight="380" Width="600">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding Path=AfsluitenEvent}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <local:StringToImgUrlConverter x:Key="stringNaarImgUrl" />
        <local:SelectedIndexToBoolConverter x:Key="SelectedIndexNaarBoolean" />
    </Window.Resources>

    <Border CornerRadius="18"  Background="{StaticResource MainBackground}" BorderThickness="5" BorderBrush="#393D42" MouseDown="MoveWindowOnHold" x:Name="TransOnDrag">
        <Grid>
            <tb:TaskbarIcon x:Name="nicon"  IconSource="/Images/logo.ico" ToolTipText="RPCApp">
                <tb:TaskbarIcon.TrayToolTip>
                    <Border Background="{StaticResource MainBackground}" BorderBrush="Black" BorderThickness="0" CornerRadius="4" Opacity="0.98" Width="125">
                        <TextBlock Text="Custom RPCApp" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontSize="11" />
                    </Border>
                </tb:TaskbarIcon.TrayToolTip>
                <tb:TaskbarIcon.ContextMenu>
                    <ContextMenu Background="#FF414288" BorderThickness="0">
                        <ContextMenu.Style>
                            <Style TargetType="{x:Type ContextMenu}">
                                <Setter Property="ItemsPanel" Value="{StaticResource MenuTPL}" />
                            </Style>
                        </ContextMenu.Style>
                        <MenuItem x:Name="MinItemMenu" Header="{Binding MinimizeTBText}" Foreground="White" Command="{Binding MinimizeAppCommand}" CommandParameter="{x:Reference Name=RPCWindow}"/>
                        <MenuItem Header="Exit" Foreground="White" Command="{Binding CloseAppCommand}" CommandParameter="{x:Reference Name=RPCWindow}"/>
                    </ContextMenu>
                </tb:TaskbarIcon.ContextMenu>
            </tb:TaskbarIcon>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition Width="5"></ColumnDefinition>
                    <ColumnDefinition Width="300"></ColumnDefinition>
                    <ColumnDefinition Width="5"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"></RowDefinition>
                    <RowDefinition Height="2"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="2"></RowDefinition>
                    <RowDefinition Height="1*"></RowDefinition>
                    <RowDefinition Height="10"></RowDefinition>
                </Grid.RowDefinitions>

                <DockPanel Grid.ColumnSpan="4">
                    <Button Command="{Binding CloseAppCommand}" CommandParameter="{x:Reference Name=RPCWindow}" Width="45" Height="20" Background="Transparent" BorderBrush="Transparent" DockPanel.Dock="Right" ToolTip="Close">
                        <materialDesign:PackIcon Kind="Close" Foreground="#FFBDBDBD" Background="#00000000" Height="20" Width="27" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Button>
                    <Button Command="{Binding MinimizeAppCommand}" CommandParameter="{x:Reference Name=RPCWindow}" Width="45" Height="20" Background="Transparent" BorderBrush="Transparent" HorizontalAlignment="Right" ToolTip="Minimize">
                        <materialDesign:PackIcon Kind="Minus" Foreground="#FFBDBDBD" Background="#00000000" Height="20" Width="27" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Button>
                </DockPanel>

                <Border Grid.Row="2" Grid.Column="1" Background="#2C2F33" CornerRadius="18" BorderThickness="0" BorderBrush="#393D42">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SizeChanged">
                            <i:InvokeCommandAction Command="{Binding Path=GridSizeChangedEvent}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <StackPanel Margin="5">

                        <TextBox Margin="5" Foreground="White" Text="{Binding DiscordAppId}" ToolTip="Discord Application ID"></TextBox>
                        <TextBox x:Name="RPCStateText" Margin="5" Foreground="White" Text="{Binding DiscordRpcState}" ToolTip="State"></TextBox>
                        <TextBox x:Name="RPCDetailsText" Margin="5" Foreground="White" Text="{Binding DiscordRpcDetails}" ToolTip="Details"></TextBox>

                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5"></ColumnDefinition>
                                <ColumnDefinition Width="90"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="5"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Column="1" Grid.Row="0" Foreground="White">Large Image</TextBlock>
                            <ToggleButton x:Name="LargeImgButton" Cursor="Hand" Grid.Row="0" HorizontalAlignment="Left" Grid.Column="2" VerticalAlignment="Center" IsChecked="{Binding LargeImgButton}"/>
                            <StackPanel Grid.ColumnSpan="4" Grid.Row="1" Visibility="{Binding ElementName=LargeImgButton, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <TextBox x:Name="RPCLargeImgURL" Margin="0,8,0,2" Foreground="White" Text="{Binding DiscordRpcLargeImgUrl}"  ToolTip="Large Image URL"></TextBox>
                                <TextBox x:Name="RPCLargeImgText" Margin="0,8,0,2" Foreground="White" Text="{Binding DiscordRpcLargeImgText}" ToolTip="Large Image Text"></TextBox>
                            </StackPanel>
                        </Grid>

                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5"></ColumnDefinition>
                                <ColumnDefinition Width="90"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="5"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Column="1" Grid.Row="0" Foreground="White">Small Image</TextBlock>
                            <ToggleButton x:Name="SmallImgButton" Cursor="Hand" Grid.Row="0" HorizontalAlignment="Left" Grid.Column="2" VerticalAlignment="Center" IsChecked="{Binding SmallImgButton}"/>
                            <StackPanel Grid.ColumnSpan="4" Grid.Row="1" Visibility="{Binding ElementName=SmallImgButton, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <TextBox x:Name="RPCSmallImgURL" Margin="0,8,0,2" Foreground="White" Text="{Binding DiscordRpcSmallImgUrl}"  ToolTip="Small Image URL"></TextBox>
                                <TextBox x:Name="RPCSmallImgText" Margin="0,8,0,2" Foreground="White" Text="{Binding DiscordRpcSmallImgText}" ToolTip="Small Image Text"></TextBox>
                            </StackPanel>
                        </Grid>

                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5"></ColumnDefinition>
                                <ColumnDefinition Width="90"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="5"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Column="1" Grid.Row="0" Foreground="White">Button 1</TextBlock>
                            <ToggleButton x:Name="ToggleButton1" Cursor="Hand" Grid.Row="0" HorizontalAlignment="Left" Grid.Column="2" VerticalAlignment="Center" IsChecked="{Binding Button1}"/>
                            <StackPanel Grid.ColumnSpan="4" Grid.Row="1" Visibility="{Binding ElementName=ToggleButton1, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <TextBox x:Name="Button1TitleText" Margin="0,8,0,2" Foreground="White" Text="{Binding button1Text}"  ToolTip="Button Title"></TextBox>
                                <TextBox x:Name="Button1UrlText" Margin="0,8,0,2" Foreground="White" Text="{Binding button1Url}" ToolTip="Button URL"></TextBox>
                            </StackPanel>
                        </Grid>

                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5"></ColumnDefinition>
                                <ColumnDefinition Width="90"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="5"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Column="1" Grid.Row="0" Foreground="White">Button 2</TextBlock>
                            <ToggleButton x:Name="ToggleButton2" Cursor="Hand" Grid.Row="0" HorizontalAlignment="Left" Grid.Column="2" VerticalAlignment="Center" IsChecked="{Binding Button2}"/>
                            <StackPanel Grid.ColumnSpan="4" Grid.Row="1" Visibility="{Binding ElementName=ToggleButton2, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <TextBox x:Name="Button2TitleText" Margin="0,8,0,2" Foreground="White" Text="{Binding button2Text}"  ToolTip="Button Title"></TextBox>
                                <TextBox x:Name="Button2UrlText" Margin="0,8,0,2" Foreground="White" Text="{Binding button2Url}" ToolTip="Button URL"></TextBox>
                            </StackPanel>
                        </Grid>

                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5"></ColumnDefinition>
                                <ColumnDefinition Width="90"></ColumnDefinition>
                                <ColumnDefinition Width="50"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="5"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBlock VerticalAlignment="Center" Grid.Column="1" Grid.Row="0" Foreground="White">Timer</TextBlock>
                            <ToggleButton x:Name="TimerButton" Cursor="Hand" Grid.Row="0" HorizontalAlignment="Left" Grid.Column="2" VerticalAlignment="Center" IsChecked="{Binding RpcTimer}" Command="{Binding SetTimerCommand}"/>
                            <Button Grid.Column="3" Foreground="Black"  materialDesign:ButtonAssist.CornerRadius="10" ToolTip="Reset RPC Timestamp"
                                BorderThickness="0" Content="Reset Timer" FontSize="10"  HorizontalAlignment="Center" VerticalAlignment="Center"
                                Background="{StaticResource ButtonGradient2}" Command="{Binding ResetRPCTimeCommand}" IsEnabled="{Binding ElementName=TimerButton, Path=IsChecked}">
                                <Button.Effect>
                                    <DropShadowEffect BlurRadius="3" ShadowDepth="3" Opacity="0.2" />
                                </Button.Effect>
                            </Button>
                        </Grid>
                    </StackPanel>
                </Border>

                <Grid Grid.Row="2" Grid.Column="3">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="10"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                    </Grid.RowDefinitions>

                    <Border Grid.Row="0" Background="#18191C" CornerRadius="18" BorderThickness="0" BorderBrush="#393D42">
                        <Grid Margin="5">
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"></ColumnDefinition>
                                <ColumnDefinition Width="3"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <Border CornerRadius="10" BorderThickness="0" Grid.Row="0" Grid.ColumnSpan="100" Background="#232429" Margin="0,0,0,5">
                                <TextBlock HorizontalAlignment="Center" FontSize="20" Margin="5" FontWeight="Bold" Text="PLAYING A GAME" Foreground="{StaticResource discordFontColor}"></TextBlock>
                            </Border>

                            <WrapPanel Grid.Column="0" Grid.Row="1" Margin="5,0,0,6">
                                <Grid >
                                    <Rectangle Height="90" Width="90" RadiusX="5" RadiusY="5" Visibility="{Binding ElementName=LargeImgButton, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Rectangle.Fill>
                                            <ImageBrush x:Name="myImage" Stretch="UniformToFill" ImageSource="{Binding ElementName=RPCLargeImgURL, Path=Text, Converter={StaticResource stringNaarImgUrl}}"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Ellipse Width="35" Height="35" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,-7,-3" Visibility="{Binding ElementName=SmallImgButton, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" Stroke="#18191C" StrokeThickness="2">
                                        <Ellipse.Fill>
                                            <ImageBrush x:Name="smallImg"  Stretch="UniformToFill" ImageSource="{Binding ElementName=RPCSmallImgURL, Path=Text, Converter={StaticResource stringNaarImgUrl}}" />
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Grid>
                            </WrapPanel>

                            <StackPanel Grid.Column="2" VerticalAlignment="Top" Grid.Row="1">
                                <TextBlock FontWeight="Bold" FontSize="17" Foreground="{StaticResource discordFontColor}">Unknown Application</TextBlock>
                                <TextBlock FontWeight="Normal" FontSize="16" Text="{Binding ElementName=RPCStateText, Path=Text}" Foreground="{StaticResource discordFontColor}"></TextBlock>
                                <TextBlock FontWeight="Normal" FontSize="16" Text="{Binding ElementName=RPCDetailsText, Path=Text}" Foreground="{StaticResource discordFontColor}"></TextBlock>
                                <Label FontWeight="Normal" FontSize="16" Content="{Binding timerDate}" ContentStringFormat="dd\.hh\:mm\:ss" Foreground="{StaticResource discordFontColor}" Visibility="{Binding ElementName=TimerButton, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"></Label>
                            </StackPanel>

                            <StackPanel Grid.Row="2" Grid.ColumnSpan="100">
                                <Button Margin="5" Background="Gray" BorderThickness="0" Content="{Binding ElementName=Button1TitleText, Path=Text}" Visibility="{Binding ElementName=ToggleButton1, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"></Button>
                                <Button Margin="5" Background="Gray" BorderThickness="0" Content="{Binding ElementName=Button2TitleText, Path=Text}" Visibility="{Binding ElementName=ToggleButton2, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"></Button>
                            </StackPanel>
                        </Grid>
                    </Border>

                    <Border Grid.Row="2" Grid.Column="1" Background="#2C2F33" CornerRadius="7" BorderThickness="0" BorderBrush="#393D42">

                        <StackPanel Orientation="Vertical" Margin="5" Grid.Row="5">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <TextBlock Foreground="White" Margin="0,0,20,0" VerticalAlignment="Center">Loop Details</TextBlock>
                                <ToggleButton x:Name="DetailsLoopButton" Cursor="Hand" VerticalAlignment="Center" IsChecked="{Binding LoopDetailsButton}" Command="{Binding SetDetailsLoopCommand}"/>
                            </StackPanel>

                            <StackPanel Visibility="{Binding ElementName=DetailsLoopButton, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Border Grid.Row="2" Grid.Column="1" Background="{StaticResource MainBackgroundLight}" CornerRadius="10" BorderThickness="0" Height="150"  Margin="2">
                                    <ListBox Name="DetailLoopListBox" ItemsSource="{Binding LoopDetail}"></ListBox>
                                </Border>
                                <TextBox Text="{Binding DetailToAdd}" Foreground="White" Margin="0,8,0,2" ToolTip="Detail text to add"></TextBox>
                                <StackPanel Orientation="Horizontal">
                                    <Button Margin="10" Content="Add Detail" Command="{Binding AddDetailCommand}" Background="#202225"></Button>
                                    <Button Margin="10" Content="Remove Detail" Command="{Binding RemoveDetailCommand}" CommandParameter="{Binding ElementName=DetailLoopListBox}" Background="#202225" IsEnabled="{Binding ElementName=DetailLoopListBox, Path=SelectedIndex, Converter={StaticResource SelectedIndexNaarBoolean}}"></Button>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </Grid>

                <Button x:Name="EnableRPC" Grid.Column="3" Grid.Row="4" Foreground="Black" Height="auto" Padding="7" Width="130" materialDesign:ButtonAssist.CornerRadius="15"
                                BorderThickness="0" Content="{Binding StartButtonText}" FontSize="15"  HorizontalAlignment="Center" VerticalAlignment="Center"
                                Background="{Binding StartButtonColor}" Command="{Binding StartRPCCommand}" CommandParameter="{Binding ElementName=EnableRPC, Path=Content}">
                    <Button.Effect>
                        <DropShadowEffect BlurRadius="3" ShadowDepth="3" Opacity="0.2" />
                    </Button.Effect>
                </Button>

                <Button x:Name="UpdateRPC" Grid.Column="1" Grid.Row="4" Foreground="Black" Height="auto" Padding="7" Width="130" materialDesign:ButtonAssist.CornerRadius="15"
                                BorderThickness="0" Content="Update RPC" FontSize="15"  HorizontalAlignment="Center" VerticalAlignment="Center"
                                Background="{StaticResource ButtonGradient2}" Command="{Binding UpdateRPCCommand}" IsEnabled="{Binding RPCEnabled}">
                    <Button.Effect>
                        <DropShadowEffect BlurRadius="3" ShadowDepth="3" Opacity="0.2" />
                    </Button.Effect>
                </Button>

            </Grid>
        </Grid>
    </Border>
</Window>
